name: Manual Release

on:
  workflow_dispatch:
    inputs:
      version_type:
        description: 'Version bump type'
        required: true
        default: 'patch'
        type: choice
        options:
          - patch
          - minor
          - major

jobs:
  release:
    runs-on: ubuntu-latest
    permissions:
      contents: write
      packages: write

    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          fetch-depth: 0

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20.x'
          cache: 'npm'
          registry-url: 'https://registry.npmjs.org'

      - name: Install dependencies
        run: npm ci

      - name: Verify package configuration
        run: |
          # Check if package is private
          if [ "$(node -p "require('./package.json').private")" = "true" ]; then
            echo "Error: Package is marked as private. Cannot publish to npm."
            exit 1
          fi

          # Check if package name exists
          PACKAGE_NAME=$(node -p "require('./package.json').name")
          if [ -z "$PACKAGE_NAME" ]; then
            echo "Error: Package name is missing from package.json"
            exit 1
          fi

          echo "Package name: $PACKAGE_NAME"
          echo "Package is ready for publishing"

      - name: Run tests
        run: npm test

      - name: Build project
        run: npm run build

      - name: Setup Git
        run: |
          git config --local user.email "action@github.com"
          git config --local user.name "GitHub Action"

      - name: Bump version
        id: version
        run: |
          # Get current version
          CURRENT_VERSION=$(node -p "require('./package.json').version")
          echo "Current version: $CURRENT_VERSION"

          # Bump version based on input
          NEW_VERSION=$(npm version ${{ github.event.inputs.version_type }} --no-git-tag-version)
          echo "New version: $NEW_VERSION"

          # Set output for next steps
          echo "new=$NEW_VERSION" >> $GITHUB_OUTPUT

          # Commit the version bump
          git add package.json package-lock.json
          git commit -m "Bump version to $NEW_VERSION [skip ci]"
          git push origin HEAD:master

      - name: Publish to npm
        run: |
          echo "Publishing version ${{ steps.version.outputs.new }} to npm..."
          npm publish
          echo "Successfully published to npm!"
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}

      - name: Create Git tag
        run: |
          NEW_VERSION=$(node -p "require('./package.json').version")
          git tag "v$NEW_VERSION"
          git push origin "v$NEW_VERSION"

      - name: Create GitHub Release
        uses: softprops/action-gh-release@v1
        with:
          tag_name: v${{ steps.version.outputs.new }}
          name: Release v${{ steps.version.outputs.new }}
          draft: false
          prerelease: false
          generate_release_notes: true
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
