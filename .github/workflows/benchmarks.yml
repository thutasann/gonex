name: Benchmark Suite

on:
  workflow_dispatch:
    inputs:
      branch:
        description: 'Branch to run benchmarks on'
        required: true
        default: 'master'
        type: string

jobs:
  benchmarks:
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/master' || github.event.inputs.branch == 'master'
    permissions:
      contents: write
      pages: write
      id-token: write

    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          ref: ${{ github.event.inputs.branch || 'master' }}
          token: ${{ secrets.GITHUB_TOKEN }}
          fetch-depth: 0

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20.x'
          cache: 'npm'

      - name: Install root project dependencies
        run: npm ci

      - name: Build root project
        run: npm run build

      - name: Install benchmark dependencies
        working-directory: ./benchmarks
        run: npm install

      - name: Run benchmarks
        working-directory: ./benchmarks
        run: |
          echo "🚀 Running benchmarks..."
          npm run benchmark
          echo ""
          echo "📊 Checking results directory:"
          ls -la results/ || echo "No results directory found"
          echo ""
          echo "📁 Results structure:"
          find results/ -type f 2>/dev/null || echo "No results files found"

      - name: Display benchmark summary
        working-directory: ./benchmarks
        run: |
          echo "📊 Benchmark Results Generated"
          echo "================================"
          ls -la results/
          echo ""
          echo "📝 Latest Results:"
          if [ -f results/*.md ]; then
            head -n 20 results/*.md | tail -n +1
          fi

          # Show the structure of results
          echo ""
          echo "📁 Results Structure:"
          find results/ -type f -name "*.json" -o -name "*.md" | head -10

      - name: Prepare benchmark results for GitHub
        run: |
          # Create simple README for the results
          echo "# Gonex Benchmark Results" > benchmarks/README.md
          echo "" >> benchmarks/README.md
          echo "Performance benchmarks for the Gonex concurrency library." >> benchmarks/README.md
          echo "" >> benchmarks/README.md
          echo "📅 **Generated:** $(date -u)" >> benchmarks/README.md
          echo "🌟 **Branch:** ${{ github.event.inputs.branch || github.ref_name }}" >> benchmarks/README.md
          echo "🔗 **Commit:** [\`${{ github.sha }}\`](https://github.com/${{ github.repository }}/commit/${{ github.sha }})" >> benchmarks/README.md
          echo "" >> benchmarks/README.md
          echo "## 📊 Results Structure" >> benchmarks/README.md
          echo "" >> benchmarks/README.md
          echo "Results are organized by date and time:" >> benchmarks/README.md
          echo "- Date folders: YYYY-MM-DD" >> benchmarks/README.md
          echo "- Time folders: HH-MM-SS" >> benchmarks/README.md
          echo "" >> benchmarks/README.md
          echo "📁 [View Results](./results/)" >> benchmarks/README.md

      - name: Commit results to benchmark-results branch
        run: |
          # Configure git
          git config --local user.email "action@github.com"
          git config --local user.name "GitHub Actions"

          # Try to fetch the benchmark-results branch
          git fetch origin benchmark-results:benchmark-results 2>/dev/null || echo "Branch doesn't exist yet"

          # Create or checkout the branch
          git checkout benchmark-results 2>/dev/null || git checkout -b benchmark-results

          # Clear everything except .git
          find . -mindepth 1 -maxdepth 1 ! -name '.git' ! -name 'benchmarks' -exec rm -rf {} +

          # Copy the entire benchmarks directory structure to root
          if [ -d "benchmarks" ]; then
            cp -r benchmarks/* .
            echo "✅ Benchmark results copied to root"
          fi

          # Add and commit
          git add .
          git commit -m "📊 Benchmark results from ${{ github.event.inputs.branch || github.ref_name }} ($(date -u +"%Y-%m-%d %H:%M:%S UTC"))" || echo "No changes to commit"

          # Push to benchmark-results branch
          git push origin benchmark-results

      - name: Upload benchmark artifacts (backup)
        uses: actions/upload-artifact@v4
        with:
          name: benchmark-results-${{ github.sha }}
          path: benchmarks/results/
          retention-days: 30

      - name: Comment with results links
        if: github.event_name == 'pull_request'
        uses: actions/github-script@v7
        with:
          script: |
            const comment = `## 📊 Benchmark Results

            🎯 **Latest Results:** [View on benchmark-results branch](https://github.com/${{ github.repository }}/tree/benchmark-results/latest)
            📈 **All Historical Results:** [View history](https://github.com/${{ github.repository }}/tree/benchmark-results/history)
            📁 **Artifacts:** Available in workflow artifacts as backup

            **Quick Access:**
            - 📋 [README](https://github.com/${{ github.repository }}/blob/benchmark-results/README.md)
            - 📊 [Latest JSON Results](https://github.com/${{ github.repository }}/tree/benchmark-results/latest)
            `;

            github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: comment
            });
